--The query below will tell you WHAT IS CURRENTLY running (NOT COMPLETED) that's using a lot of CPU
SELECT SPID, CPU, s2.text, open_tran, status, program_name, net_library, loginame
FROM  sys.sysprocesses
      CROSS APPLY sys.dm_exec_sql_text(sql_handle) AS s2
WHERE CPU > 5000        -- CPU usage greater than 5 seconds
and   status like 'run%'

--Queries that completed and used a lot of CPU
SELECT top 20
  total_worker_time AS [TotCPU],
  total_physical_reads AS [ReadIO],
  total_elapsed_time AS [TotDuration],
  (SELECT [text] FROM sys.dm_exec_sql_text (sql_handle)) AS [query],
  (SELECT [query_plan] FROM sys.dm_exec_query_plan (plan_handle)) AS [query_plan]
FROM sys.dm_exec_query_stats
ORDER BY total_worker_time desc

-- Table fragmentation.
 
SELECT OBJECT_NAME(ips.OBJECT_ID)
 ,i.NAME
 ,ips.index_id
 ,index_type_desc
 ,avg_fragmentation_in_percent
 ,avg_page_space_used_in_percent
 ,page_count
FROM sys.dm_db_index_physical_stats(DB_ID(), NULL, NULL, NULL, 'SAMPLED') ips
INNER JOIN sys.indexes i ON (ips.object_id = i.object_id)
 AND (ips.index_id = i.index_id)
ORDER BY avg_fragmentation_in_percent DESC

-- Find the number of superseded updates

Select COUNT(UpdateID) from vwMinimalUpdate where IsSuperseded=1 and Declined=0

--Task Manager for SQL

SELECT s.session_id
    ,r.STATUS
    ,r.blocking_session_id 'blocked by'
    ,r.wait_type
    ,wait_resource
    ,r.wait_time / (1000.0) 'Wait Time (in Sec)'
    ,r.cpu_time
    ,r.logical_reads
    ,r.reads
    ,r.writes
    ,r.total_elapsed_time / (1000.0) 'Elapsed Time (in Sec)'
    ,Substring(st.TEXT, (r.statement_start_offset / 2) + 1, (
            (
                CASE r.statement_end_offset
                    WHEN - 1
                        THEN Datalength(st.TEXT)
                    ELSE r.statement_end_offset
                    END - r.statement_start_offset
                ) / 2
            ) + 1) AS statement_text
    ,Coalesce(Quotename(Db_name(st.dbid)) + N'.' + Quotename(Object_schema_name(st.objectid, st.dbid)) + N'.' +
     Quotename(Object_name(st.objectid, st.dbid)), '') AS command_text
    ,r.command
    ,s.login_name
    ,s.host_name
    ,s.program_name
    ,s.host_process_id
    ,s.last_request_end_time
    ,s.login_time
    ,r.open_transaction_count
FROM sys.dm_exec_sessions AS s
INNER JOIN sys.dm_exec_requests AS r ON r.session_id = s.session_id
CROSS APPLY sys.dm_exec_sql_text(r.sql_handle) AS st
WHERE r.session_id != @@SPID
--and r.session_id =
ORDER BY r.cpu_time DESC
    ,r.STATUS
    ,r.blocking_session_id
    ,s.session_id  
